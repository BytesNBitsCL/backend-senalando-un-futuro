// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Palabra {
  idPalabra          Int               @id @default(autoincrement())
  nombrePalabra      String
  iconPalabra        String
  videoPalabra       String
  idNivel            Int
  nivel              Nivel             @relation(fields: [idNivel], references: [idNivel])
  idCategoria        Int
  categoria          Categoria         @relation(fields: [idCategoria], references: [idCategoria])
}

model Categoria {
  idCategoria             Int           @id @default(autoincrement())
  nombreCategoria         String
  descripcionCategoria    String
  iconoCategoria          String
  bgCategoria             String
  idNivel                 Int
  nivel                   Nivel         @relation(fields: [idNivel], references: [idNivel])
  palabras                Palabra[]
}

model Nivel {
  idNivel           Int             @id @default(autoincrement())
  nombreNivel       String
  descripcionNivel  String
  iconoNivel        String
  palabras          Palabra[]
  categorias        Categoria[]
  Progreso          Progreso[]
}

model Usuario {
  idUsuario          Int            @id @default(autoincrement()) @unique
  nombreUsuario      String
  apellidoUsuario    String
  correoUsuario      String         @unique
  contrasenaUsuario  String
  idRol              Int
  rol                Rol            @relation(fields: [idRol], references: [idRol])
  progreso           Progreso?      @relation // Se define como opcional sin 'fields' ni 'references'
}

model Rol {
  idRol              Int            @id @default(autoincrement()) @unique
  nombre             String
  descripcion        String?
  usuarios           Usuario[]
}

model Progreso {
  idProgreso            Int         @id @default(autoincrement()) @unique
  categoriasProgreso    Json         
  palabrasProgreso      Json
  porcentajeNivel       Float
  idNivel               Int
  nivel                 Nivel       @relation(fields: [idNivel], references: [idNivel])
  idUsuario             Int         @unique // Este campo es único para garantizar la relación 1:1
  usuario               Usuario     @relation(fields: [idUsuario], references: [idUsuario]) // Definido como requerido
}